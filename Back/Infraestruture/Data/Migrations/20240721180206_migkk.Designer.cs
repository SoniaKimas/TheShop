// <auto-generated />
using System;
using Infraestruture.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infraestruture.Data.Migrations
{
    [DbContext(typeof(MarketContext))]
    [Migration("20240721180206_migkk")]
    partial class migkk
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Domain.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("Percentage")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("SourceProductId")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("SourceRequiredQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Discounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndDate = new DateTime(2024, 7, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            Percentage = 10m,
                            ProductId = "apple",
                            SourceRequiredQuantity = 1,
                            StartDate = new DateTime(2024, 7, 15, 0, 0, 0, 0, DateTimeKind.Local),
                            Type = 1
                        },
                        new
                        {
                            Id = 2,
                            EndDate = new DateTime(2021, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Percentage = 50m,
                            ProductId = "bread",
                            SourceProductId = "soup",
                            SourceRequiredQuantity = 2,
                            StartDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = 0
                        });
                });

            modelBuilder.Entity("Domain.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UnitType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = "soup",
                            ImageUrl = "soup.jpg",
                            IsAvailable = true,
                            Name = "Soup",
                            Price = 0.65m,
                            UnitType = 0
                        },
                        new
                        {
                            Id = "bread",
                            ImageUrl = "bread.jpg",
                            IsAvailable = true,
                            Name = "Bread",
                            Price = 0.80m,
                            UnitType = 0
                        },
                        new
                        {
                            Id = "milk",
                            ImageUrl = "milk.jpg",
                            IsAvailable = true,
                            Name = "Milk",
                            Price = 1.30m,
                            UnitType = 0
                        },
                        new
                        {
                            Id = "apple",
                            ImageUrl = "apples.jpg",
                            IsAvailable = true,
                            Name = "Apples Bag",
                            Price = 1.00m,
                            UnitType = 2
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
